class u{constructor(i){var e,t;this.importURICache=new Map,this.modifiers="",this.normalizeMetadata(i),this.mappingEndpoint=(i==null?void 0:i.importMappings)||(e=i==null?void 0:i.endpoints)===null||e===void 0?void 0:e.uris.mapping,((t=i==null?void 0:i.endpoints)===null||t===void 0?void 0:t.modifiers)&&(this.modifiers=Object.entries(i.endpoints.modifiers).reduce((n,[r,l])=>n+=`${r}=${l}&`,"?"))}normalizeMetadata(i){if(i&&i.imports)for(const[e,t]of Object.entries(i.imports))e&&t&&(Array.isArray(t)?t:[]).forEach(r=>{this.importURICache.set(r,e)})}async fetchMappings(i){const e=`${this.mappingEndpoint}${encodeURIComponent(i)}${this.modifiers}`,t=await globalThis.fetch(e);if(t.ok){const n=await t.json();this.normalizeMetadata(n)}}async resolve(i){let e=this.importURICache.get(i);return!e&&this.mappingEndpoint&&(await this.fetchMappings(i),e=this.importURICache.get(i)),e}}class m{constructor(i){this.importURICache=i&&i.imports?i:{imports:{}}}legacyResolve(i){return this.importURICache.imports[i]}}let d,s,a;function h(o){d=o;const{imports:i,index:e,importMappings:t,endpoints:n}=o;s=new u({imports:i,index:e,endpoints:n,importMappings:t}),a=new m(t)}async function c(o,i){return import(await v(o,i))}async function v(o,i){var e;if(o.includes("://")||o.startsWith("/"))return o;if(!s||!a)throw new Error("The ESM Loader was not initialized");if(s){const r=await s.resolve(o);if(r)return r}if(a){const r=a.legacyResolve(o);if(r)return r}const{endpoints:t}=d;if(!((e=t==null?void 0:t.uris)===null||e===void 0?void 0:e.module))throw new Error(`Unable to resolve the URL for "${o}"`);let n=t.uris.module+encodeURIComponent(o);return i&&(n+=`?importer=${encodeURIComponent(i)}`),t.modifiers&&(n+=Object.entries(t.modifiers).reduce((r,[l,p])=>r+=`${l}=${p}&`,i?"&":"?")),n}export{h as init,c as load};
